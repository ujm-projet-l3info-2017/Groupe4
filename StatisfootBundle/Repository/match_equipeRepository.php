<?php

namespace Projet\StatisfootBundle\Repository;
//namespace Projet\StatisfootBundle\Entity;
use Doctrine\ORM\EntityRepository;
/**
 * match_equipeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class match_equipeRepository extends EntityRepository
{
	//recuperation des equipes pour un match donné
	public function findMatchEquipe($id_match){
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.match','match')
			->addSelect('match')
			->leftJoin('m.equipe','eq')
			->addSelect('eq')
			->where('match.id = :id')
			->setParameter('id',$id_match);
			
		return $qb->getQuery()->getResult();
	}

	//recupération des equipes engagé dans une compétition
	public function findEquipeCompet($idC){
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.match','match')
			->leftJoin('m.equipe','eq')
			->leftJoin('match.competition','compet')
			->addSelect('eq')
			->distinct(true)
			->where('compet.id = :idC')
			->setParameter('idC',$idC);
		return $qb->getQuery()->getResult();
	}

	//recupération des resultats des matchs d'une compétion données
	public function findResultatsCompet($idC){
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.match','match')
			->leftJoin('match.competition','compet')
			->where('compet.id = :idC')
			->setParameter('idC',$idC);
		return $qb->getQuery()->getResult();
	}

	//recupération des matchs pour une equipe donnée
	public function findMAtch($id_equipe){
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.match','match')
			->addSelect('match')
			->leftJoin('m.equipe','eq')
			->where('eq.id = :id')
			->setParameter('id',$id_equipe);
		return $qb->getQuery()->getResult();
	}
	// recuperation de tout les matchs d'une equipe.
	public function findLesMatchs($id){
		$matchs = $this->createQueryBuilder('m')
		->leftJoin('m.match','match')
			->addSelect('match')
			->leftJoin('m.equipe','eq')
			->addSelect('eq')
			->where('eq.id = :id')
			->setParameter('id',$id);

		//->orderBy('match.dateMatch','DESC');
		return $matchs->getQuery()->getResult();
	}

// recuperation d'un adversaire
	public function findAdversaire($idmatch, $ideq){
		$matchs = $this->createQueryBuilder('m')
		->leftJoin('m.match','match')
			->addSelect('match')
			->leftJoin('m.equipe','eq')
			->addSelect('eq')
			->where('eq.id != :id')
			->andwhere('match.id = :idmatch')
			->setParameter('id',$ideq)
			->setParameter('idmatch',$idmatch);

			return $matchs->getQuery()->getResult();
	}
}
