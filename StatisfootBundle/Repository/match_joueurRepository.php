<?php

namespace Projet\StatisfootBundle\Repository;
use Doctrine\ORM\EntityRepository;
/**
 * match_joueurRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class match_joueurRepository extends EntityRepository
{
	//recuperation des statatisque d'un joueur pour une competition donnée
	public function findStat($id_joueur,$id_compet){
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.match_foot','match')
			->leftJoin('m.joueur','j')
			->leftJoin('match.competition','compet')
			->where('j.id = :idJ')
			->andWhere('compet.id = :idC')
			->setParameter('idJ',$id_joueur)
			->setParameter('idC',$id_compet);
		
		return $qb->getQuery()->getResult();
	}

	//recupération des joueurs engagés dans une compétition données
	public function findJoueurCompet($idC){
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.match_foot','match')
			->leftJoin('m.joueur','j')
			->leftJoin('match.competition','compet')
			->select('COUNT(j.id) AS nbrM, j.id AS id, j.nomJ AS nom, j.prenomJ AS prenom')
			->where('compet.id = :idC')
			->setParameter('idC',$idC)
			->groupBy('j.id');
		
		return $qb->getQuery()->getResult();
	}

	//recuperation des performances d'un joueur dans un match donnée
	public function findMatchJoueur($idM,$idJ){
		$qb = $this->createQueryBuilder('m')
			->leftJoin('m.match_foot','match')
			->leftJoin('m.joueur','j')
			->where('match.id = :idM')
			->andWhere('j.id = :idJ')
			->setParameter('idM',$idM)
			->setParameter('idJ',$idJ);
		
		return $qb->getQuery()->getResult();
	}
}
